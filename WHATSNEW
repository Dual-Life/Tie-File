What's new in version 0.92:

  Bug fixes:  Negative 'nrecs' argument to 'splice' is now handled
  correctly.  Tie::File now behaves correctly even if you change $\.

  More tests and (very) minor performance enhancements.

What's new in version 0.91:

  Tie::File now correctly handles attempts to store undefined values
  in the array: they are silently converted to defined empty strings.

  If the last record of the file is not properly terminated with the
  record terminator string, and if the file was opened for writing,
  Tie::File will silently repair it.  Formerly, it would mangle the file.

  More unit tests.

  Performance enhancements.

What's new in version 0.90:

  AUTODEFERMENT: Tie::File will now turn deferred writing on and off
  automatically when it thinks it would be good to do so.  You may
  disable this feature by calling ->autodefer(0) or by supplying the
  'autodefer => 0' option with 'tie'.

  The read cache now uses a heap instead of an array.  This yields
  much better performance for large caches.

  Other performance improvements.

What's new in version 0.51:

  Minor fixes in the test suite.

What's new in version 0.50:

  DEFERRED WRITING:  You may now use the ->defer method to request
  that changes to the array *not* be written to the file immediately.
  Changes will be written when the memory limit for deferred writes is
  exceeded, or when you invoke the ->flush method.  You may discard
  pending writes with the ->discard method.  You may set the limit of
  discarded data with the 'dw_size' option.

  The DELETE method now returns the correct values.

What's new in version 0.20:

  MAJOR INCOMPATIBLE CHANGE: Records read from the tied array now have
  the record separator REMOVED by default.  This is to provide
  do-what-I-meant behavior for expressions like

        $tied[3] .= "more text";

  Formerly, this would have appended "more text" *after* the newline character.

  You may obtain the old behavior by supplying the 'autochomp => 0'
  option in the 'tie' call, or by invoking the new 'autochomp'
  accessor method.

  Tests for this new feature.

